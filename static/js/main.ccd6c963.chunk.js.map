{"version":3,"sources":["config/axios.js","components/producto.js","components/Productos.js","actions/productoActions.js","types/index.js","components/Val.js","components/Header.js","components/NuevoProducto.js","components/EditarProducto.js","actions/reviewActions.js","components/page1.js","components/Review.js","components/Testimonial.js","components/Text2.js","components/Configurator.js","reducers/productosReducer.js","reducers/reviewsReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["clienteAxios","axios","create","baseURL","Producto","producto","route","text","className","to","type","Productos","dispatch","useDispatch","useEffect","obtenerProductosAction","productos","useSelector","state","scope","lenght","map","agregarProducto","payload","agregarProductoExito","agregarProductoError","estado","a","descargarProductos","get","respuesta","descargarProductosExitosa","data","menu","items","descargaProductosError","Payload","Val","val","href","class","Header","src","srcset","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NuevoProductos","history","useState","nombre","guardarNombre","precio","guardarPrecio","cargando","loading","error","post","Swal","fire","icon","title","crearNuevoProductoAction","onSubmit","e","preventDefault","trim","push","placeholder","name","value","onChange","target","Number","EditarProducto","descargarReview","descargarReviewExitosa","reviews","descargaReviewError","Title","Review","Testimonial","slider","reviewsj","JSON","stringify","console","log","Text2","Configurator","initialState","combineReducers","action","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","NuevoProducto","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ccd6c963.chunk.js","sourcesContent":["\nimport axios from 'axios'\n\n\nconst clienteAxios = axios.create({\n     baseURL: 'https://raw.githubusercontent.com/Bernabe-Felix/Bellotero/master/'\n})\n\nexport default clienteAxios;\n//http://localhost:5000/productos","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Producto = ({producto}) => {\n     const {text, route} = producto\n     return (\n          <tr>\n            \n               <td><span className=\"font-weight-bolt\">{route}</span></td>\n               <td className=\"acciones\">\n                    <Link to={'/productos/editar/${text}'} className=\"btn btn-primary mr-2\" >\n                         editar\n                    </Link>\n                    <button type=\"button\" className=\"btn btn-danger\">eliminar</button>\n                    \n                    \n               </td>\n          </tr>\n     );\n\n}\nexport default Producto","import React, { Fragment, useEffect } from 'react';\nimport Producto from './producto'\n\n//redux\nimport {useSelector,useDispatch} from 'react-redux'\nimport { obtenerProductosAction} from '../actions/productoActions'\n\nconst Productos = () => {\n\n     const dispatch =useDispatch()\n     useEffect(()=>{\n          //consultar api{}\n          const cargarProductos = () =>dispatch( obtenerProductosAction() )\n          cargarProductos()\n     },[]\n     )\n     // obtener el state\n     const productos = useSelector( state => state.productos.productos)\n     //console.log(productos.productos)\n     return (\n          <Fragment>\n          <h2 className=\"text-center my-5\">Listado de Productos.js</h2>\n\n          <table className=\"table table-striped\">\n               <thead className=\"bg-primary table-dark\">\n                    <tr>\n                        <th scope=\"col\">nombre</th>\n                        <th scope=\"col\">Precio</th>\n                        <th scope=\"col\">Acciones</th>\n                    </tr>\n               </thead>\n               <tbody>\n                   {productos.lenght === 0 ? 'no hay productos' : (\n                        productos.map(producto => (\n                             <Producto \n                             \n                             producto={producto}\n                             \n                             />\n                        ))\n                   )}\n               </tbody>\n           </table>\n          </Fragment>\n     );\n}\n\nexport default Productos;","import {\n     AGREGAR_PRODUCTO,\n     AGREGAR_PRODUCTO_EXITO,\n     AGREGAR_PRODUCTO_ERROR,\n     COMENZAR_DESCARGA_PRODUCTOS,\n     DESCARGA_PRODUCTOS_EXITO,\n     DESCARGA_PRODUCTOS_ERROR\n\n } from '../types'; \n\n import clienteAxios from '../config/axios';\nimport Swal from 'sweetalert2';\nimport Productos from '../components/Productos';\nimport Header from '../components/Header'\n\n // crear nuevos productos\n\n export function crearNuevoProductoAction(producto){\n     return async (dispatch) =>{\n          dispatch( agregarProducto());\n\n          try {\n\n               // inserta en la API\n              await clienteAxios.post('/productos', producto);\n\n               //si todo bien actualizar el state\n               dispatch( agregarProductoExito(producto) )\n               //alerta\n               Swal.fire(\n                    'Correcto',\n                    'Se agrego correctamente',\n                    'Success'\n               )\n          } catch (error) {\n               //console.log(error)\n               // si error cambiar state\n\n               dispatch( agregarProductoError(true) )\n               //alerta\n               Swal.fire({\n                    icon: 'Error',\n                    title: ' hubo un error',\n                    text: 'Hubo un error'\n               \n               }\n                    )\n          }\n          //console.log(producto)\n     }\n\n }\n const agregarProducto = () => ({\n     type: AGREGAR_PRODUCTO,\n     payload: true\n\n })\n\n //si el producto se guarda en la bdd\nconst agregarProductoExito = producto => ({\n     type: AGREGAR_PRODUCTO_EXITO,\n     payload: producto\n})\n // si hay error\n const agregarProductoError = estado=>({\n     type: AGREGAR_PRODUCTO_ERROR,\n     payload: estado\n\n })\n\n //descargar datos\n export function obtenerProductosAction(){\n     return async (dispatch)  =>{\n          dispatch( descargarProductos())\n          try {\n               const respuesta = await clienteAxios.get('/app.json')\n               dispatch( descargarProductosExitosa(respuesta.data.menu.items))\n\n               //console.log(respuesta.data.menu.items)\n          } catch (error) {\n               //console.log(error)\n               dispatch( descargaProductosError())\n          }\n     }\n\n }\n const descargarProductos = () => ({\n      type: COMENZAR_DESCARGA_PRODUCTOS,\n      Payload: true\n })\n const descargarProductosExitosa = productos => ({\n      type: DESCARGA_PRODUCTOS_EXITO,\n      payload: productos\n })\n const descargaProductosError = () => ({\n      type: DESCARGA_PRODUCTOS_ERROR,\n      payload: true\n })\n\n\n //review\n  //review\n","export const AGREGAR_PRODUCTO = 'AGREGAR_PRODUCTO';\nexport const AGREGAR_PRODUCTO_EXITO = 'AGREGAR_PRODUCTO_EXITO';\nexport const AGREGAR_PRODUCTO_ERROR = 'AGREGAR_PRODUCTO_ERROR';\n\nexport const COMENZAR_DESCARGA_PRODUCTOS = 'COMENZAR_DESCARGA_PRODUCTOS';\nexport const DESCARGA_PRODUCTOS_EXITO = 'DESCARGA_PRODUCTOS_EXITO';\nexport const DESCARGA_PRODUCTOS_ERROR = 'DESCARGA_PRODUCTOS_ERROR';\n\nexport const COMENZAR_DESCARGA_REVIEW = 'COMENZAR_DESCARGA_REVIEW';\nexport const DESCARGA_REVIEW_EXITO = 'DESCARGA_REVIEW_EXITO';\nexport const DESCARGA_REVIEW_ERROR = 'DESCARGA_REVIEW_ERROR';\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../index.css';\n\nconst Val = ({val}) => {\n     const {text, route} = val\n     return (\n          <div  >\n                    <ul >\n                         <li >\n                              <a  href={route}>{text} <span class=\"sr-only\">(current)</span></a>\n                         </li>\n                    </ul>\n          </div>\n     );\n\n}\nexport default Val","\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {useSelector,useDispatch} from 'react-redux'\nimport { obtenerProductosAction} from '../actions/productoActions'\nimport Val from './Val'\nimport '../index.css';\n\nconst Header = () => {\n     //const {text, route} = header\n     const dispatch =useDispatch()\n     useEffect(()=>{\n          //consultar api{}\n          const cargarProductos = () =>dispatch( obtenerProductosAction() )\n          cargarProductos()\n     },[]\n     )\n     // obtener el state\n     const productos = useSelector( state => state.productos.productos)\n\n     return (\n          <Fragment>\n          <nav class=\"navbar navbar-expand-lg navbar-light bg-white\" >\n          <img  src=\"https://i.ibb.co/HHDFCzQ/bellotero.png\" srcset=\"https://i.ibb.co/bvYFh7D/bellotero-2x.png, https://i.ibb.co/6RfqZJ8/bellotero-3x.png \" class=\"bellotero\"className=\"bellotero\"/>\n               <button className=\"margin\" class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n               </button>\n               \n                         {\n                         productos.lenght === 0 ? 'no hay productos' : (\n                                   productos.map(val => (\n                                        <Val \n                                        \n                                        val={val}\n                                        \n                                        />\n                                   ))\n                              )}\n                         \n       \n          </nav>\n          </Fragment>\n     );\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport {useDispatch, useSelector } from 'react-redux'\n\n// Actions de Redux\nimport { crearNuevoProductoAction } from '../actions/productoActions'\n\nconst NuevoProductos = ({history}) => {\n    //state del componente\n    const [ nombre, guardarNombre] = useState('');\n    const [precio, guardarPrecio] = useState(0)\n\n    // utilizar use dispatch y te crea una funcion\n    const dispatch = useDispatch();\n    // acceder al state del store\n    const cargando = useSelector(state =>  state.productos.loading);\n    const error = useSelector(state => state.productos.error);\n    //console.log(cargando)\n\n    //mandar llamar el action de producto action\n    const agregarProducto = producto => dispatch( crearNuevoProductoAction(producto))\n    //cuando el suario haga submit \n    const submitNuevoProducto = e => {\n\n\n        e.preventDefault();\n        //validar formulario\n        if(nombre.trim() === '' || precio <=0){\n\n            return;\n        }\n        //si no hay errores\n        //crear nuevo producto\n        agregarProducto({\n            nombre,\n            precio\n\n        })\n        //redireccionar\n        history.push('/')\n    }\n     return (\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Agregar Nuevo Producto\n                        </h2>\n\n                        \n\n                        <form onSubmit= { submitNuevoProducto }>\n                            \n                            <div className=\"form-group\">\n                                <label>Nombre Producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre Producto\"\n                                    name=\"nombre\"\n                                    value = {nombre}\n                                    onChange={e => guardarNombre( e.target.value)}\n                                 \n                                    \n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Precio Producto</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Precio Producto\"\n                                    name=\"precio\"\n                                    value = {precio}\n                                    onChange={e => guardarPrecio( Number(e.target.value))}\n                                    \n                                />\n                            </div>\n\n                            <button \n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Agregar</button>\n                        </form>\n                        {cargando ? <p>Cargando..</p> : null}\n\n                       {error ? <p className=\"alert alert-danger p2\"> error</p> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevoProductos;\n","import React from 'react';\n\nconst EditarProducto = () => {\n     return (\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Editar Producto\n                        </h2>\n\n                        \n\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Nombre Producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre Producto\"\n                                    name=\"nombre\"\n                                 \n                                    \n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Precio Producto</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Precio Producto\"\n                                    name=\"precio\"\n                                    \n                                />\n                            </div>\n\n                            <button \n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >editar</button>\n                        </form>\n\n                       \n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n\nexport default EditarProducto;","import {\n\n     COMENZAR_DESCARGA_REVIEW,\n     DESCARGA_REVIEW_EXITO,\n     DESCARGA_REVIEW_ERROR\n\n } from '../types'; \n\n import clienteAxios from '../config/axios';\n\nimport Testimonial from '../components/Testimonial'\n\n // crear nuevos productos\n\n\n\n //review\n export function obtenerReviewAction(){\n     return async (dispatch)  =>{\n          dispatch( descargarReview())\n          try {\n               const respuesta = await clienteAxios.get('/page1.json')\n               dispatch( descargarReviewExitosa(respuesta.data.slider))\n               //console.log(respuesta)\n          } catch (error) {\n               //console.log(error)\n               dispatch( descargaReviewError())\n          }\n     }\n\n }\n const descargarReview = () => ({\n      type: COMENZAR_DESCARGA_REVIEW,\n      Payload: true\n })\n const descargarReviewExitosa = reviews => ({\n      type: DESCARGA_REVIEW_EXITO,\n      payload: reviews\n })\n const descargaReviewError = () => ({\n      type: DESCARGA_REVIEW_ERROR,\n      payload: true\n })","import React, { Fragment, useEffect } from 'react';\nimport '../index.css';\n\nconst Title = ({reviews}) => {\n     const reviews1= reviews\n     return (\n         \n          <div className=\"title\">Our customers love us</div>\n             \n     );\n}\n\nexport default Title;","import React, { Fragment, useEffect } from 'react';\n\n\n\nconst Review = () => {\n     //const {name, position} = val1\n     return (\n         \n          <div className=\"review\">\n                 \n                    <ul >\n                         <li >\n                         <p className=\"name\">Pete Zahut</p>\n                         </li>\n                         <p className=\"nickname\">Chief @ Maniak</p>\n                         \n                    </ul>\n          \n                    <ul>\n                         <li>\n                         <p className=\"opinion\">“It's funny what memory does, isn't it? My favorite holiday tradition might not have happened more than once or twice. But because it is such a good memory, so encapsulating of everything I love about the holidays, in my mind it happened every year. Without fail\"</p>\n                         </li>\n                    </ul>\n     \n          \n          </div>\n     );\n}\n\nexport default Review;","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {useSelector,useDispatch} from 'react-redux'\nimport { obtenerReviewAction} from '../actions/reviewActions'\nimport Title from './page1';\nimport Review from './Review';\nimport '../index.css';\n\nconst Testimonial = () => {\n     const dispatch =useDispatch()\n     useEffect(()=>{\n          //consultar api{}\n          const cargarReview = () =>dispatch( obtenerReviewAction() )\n          cargarReview()\n     },[]\n     )\n     // obtener el state\n     const reviews = useSelector( state => state)\n     const reviewsj = JSON.stringify(reviews.reviews.reviews)\n     console.log(typeof reviewsj)\n     return (\n          <Fragment>\n         <nav>\n\n                                        <Title \n                                        \n                                       \n                                        \n                                        />\n                              \n               \n           \n                                        <Review \n                                        \n                                        \n                                        />\n                          \n                    \n          </nav>\n          </Fragment>\n     );\n}\n\nexport default Testimonial;","\nimport React from 'react';\nimport '../index.css';\n\n\nconst Text2 = () => {\n\n     return (\n          <div className=\"review\">\n                 \n                    <ul >\n                         <li >\n                         <p className=\"titles\">Nombre</p>\n                         </li>\n                         <p className=\"paragraph\">Nombre gris</p>\n                         \n                    </ul>\n          \n          \n          </div>\n             \n     );\n}\n\nexport default Text2;","\nimport React from 'react';\nimport Text2 from './Text2';\nimport '../index.css';\n\n\n\nconst Configurator = () => {\n\n     return (\n          \n                         <Text2/>\n     );\n}\n\nexport default Configurator;","//cada reducer tiene su propio state\nimport {\n     AGREGAR_PRODUCTO,\n     AGREGAR_PRODUCTO_EXITO,\n     AGREGAR_PRODUCTO_ERROR,\n     COMENZAR_DESCARGA_PRODUCTOS,\n     DESCARGA_PRODUCTOS_ERROR,\n     DESCARGA_PRODUCTOS_EXITO\n     \n } from '../types';\nconst initialState = {\n     productos: [],\n     error: null,\n     loading: false\n}\n\nexport default function(state = initialState, action){\n     switch(action.type){\n          case COMENZAR_DESCARGA_PRODUCTOS:\n          case AGREGAR_PRODUCTO:\n               return {\n                    ...state,\n                    loading: action.payload\n               }\n          case AGREGAR_PRODUCTO_EXITO:\n          return {\n               ...state,\n               loading: false,\n               productos: [...state.productos, action.payload]\n          }\n          case DESCARGA_PRODUCTOS_ERROR:\n          case AGREGAR_PRODUCTO_ERROR:\n               return {\n                    ...state,\n                    loading: false,\n                    error: action.payload\n               }\n          case DESCARGA_PRODUCTOS_EXITO:\n               return {\n                    ...state,\n                    loading: false,\n                    error: null,\n                    productos: action.payload\n\n               }\n  \n          default:\n               return state;\n     }\n}","//cada reducer tiene su propio state\nimport {\n    \n     COMENZAR_DESCARGA_REVIEW,\n     DESCARGA_REVIEW_EXITO,\n     DESCARGA_REVIEW_ERROR\n     \n } from '../types';\nconst initialState = {\n     reviews: [],\n     error: null,\n     loading: false\n}\n\nexport default function(state = initialState, action){\n     switch(action.type){\n          case COMENZAR_DESCARGA_REVIEW:\n               return {\n                    \n                    loading: action.payload\n               }\n          case DESCARGA_REVIEW_ERROR:\n               return {\n                    ...state,\n                    loading: false,\n                    error: action.payload\n               }\n          case DESCARGA_REVIEW_EXITO:\n               return {\n                    ...state,\n                    loading: false,\n                    error: null,\n                    reviews: action.payload\n\n               }\n  \n          default:\n               return state;\n     }\n}","import { combineReducers } from 'redux';\nimport productosReducer from './productosReducer';\nimport reviewsReducer from './reviewsReducer'\n\n\nexport default combineReducers({\n     productos: productosReducer,\n     reviews: reviewsReducer\n})","import { createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './reducers';\nconst store = createStore(\n     reducer,\n     compose(applyMiddleware(thunk),\n\n          typeof window === 'object' &&\n               typeof window.__REDUX_DEVTOOLS_EXTENSION__ !=='undefined' ?\n\n                    window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n     )\n);\nexport default store;","import React, { Fragment } from 'react';\nimport Header from './components/Header';\nimport Productos from './components/Productos';\nimport NuevoProducto from './components/NuevoProducto';\nimport EditarProducto from './components/EditarProducto';\nimport Testimonial from './components//Testimonial';\nimport Configurator from './components/Configurator';\n\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// redux\n\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nfunction App() {\n  return (\n<Router>\n  <Provider store = {store}>\n    <Header />\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route exact path=\"/\" component= {Productos} />\n          <Route exact path=\"/page-1\" component ={Testimonial}/>\n          <Route exact path=\"/page-2\" component ={Configurator}/>\n          <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\n          <Route exact path=\"/productos/editar/:id\" component={EditarProducto} />\n        </Switch>\n      </div>\n  </Provider>\n</Router>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}